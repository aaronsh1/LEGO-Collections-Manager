@using System.Linq

@model IEnumerable<LegoCollectionManager.Models.CustomSetPiece>
@{
    LegoCollectionDBContext _context = new LegoCollectionDBContext();
}

@{
    ViewData["Title"] = "AddPieces";
    var setId = ViewBag.CustomSetId;
}

<h1>AddPieces</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Piece)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Colour)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                <p>@((from p in _context.Pieces where p.PieceId == item.Piece select p).FirstOrDefault().PieceName)</p>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Colour)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CustomSetPieceId">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.CustomSetPieceId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

    <hr/>
    @Html.Partial("AddPiece", new LegoCollectionManager.Models.CustomSetPiece());
